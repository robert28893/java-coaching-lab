# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
    paths:
      - source/sample-project/**
  pull_request:
    branches: [ "main" ]
    paths:
      - source/sample-project/**

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0.33
        env:
          MYSQL_ROOT_PASSWORD: Admin@123
          MYSQL_DATABASE: sample_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      redis:
        image: redis:7.2.1-alpine3.18
        env:
          REDIS_PASSWORD: Redis@123
        ports:
          - 6379:6379
      mongodb:
        image: mongodb/mongodb-community-server:7.0.1-ubuntu2204
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: Mongo@123
        ports:
          - 27017:27017
        options: --health-cmd="mongosh mongodb://localhost:27017 --eval 'db.runCommand({ ping: 1 })'" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Download SQL scripts
      run: wget -O scripts.sql https://raw.githubusercontent.com/robert28893/java-coaching-lab/main/source/docker-compose/mysql/db-dumps/job_db.sql
    - name: Import database
      run: mysql -h 127.0.0.1 --port=3306 -u root -p"Admin@123" < scripts.sql
    - name: Setup database and user in mongodb
      run: mongosh mongodb://localhost:27017 -u root -p Mongo@123 --eval "use sample_db;" --eval "db.createUser({user: 'user', pwd: 'User123', roles : [{role: 'dbOwner', db: 'sample_db'}]});"
    - name: Build and Test with Maven
      env:
        SPRING_DATASOURCE_URL: 'jdbc:mysql://127.0.0.1:3306/sample_db'
        SPRING_DATASOURCE_USERNAME: 'root'
        SPRING_DATASOURCE_PASSWORD: 'Admin@123'
        SPRING_JPA_HIBERNATE_DDLAUTO: 'update'
        SPRING_DATA_REDIS_HOST: '127.0.0.1'
        SPRING_DATA_REDIS_PORT: '6379'
        SPRING_DATA_REDIS_PASSWORD: 'Redis@123'
        SPRING_DATA_MONGODB_HOST: '127.0.0.1'
        SPRING_DATA_MONGODB_PORT: '27017'
        SPRING_DATA_MONGODB_USERNAME: 'user'
        SPRING_DATA_MONGODB_PASSWORD: 'User123'
        SPRING_DATA_MONGODB_DATABASE: 'sample_db'
      working-directory: source/sample-project
      run: ./mvnw -B package --file pom.xml